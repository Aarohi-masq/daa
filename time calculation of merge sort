#include<stdio.h>
#include<time.h>
void merge_sort(int a[],int beg,int end, int n)
{
   int mid;
   if(beg<end)
   {
   mid=(beg+end)/2;
   merge_sort(a,beg,mid,n);
   merge_sort(a,mid+1,end,n);
   merge(a,beg,mid,end, n);
   }
}

void merge(int a[], int beg, int mid, int end, int n)
{
    int i=beg, j=mid+1, index=beg;
    int temp[n];
    while(i<=mid && j<=end)
    {
        if (a[i]<a[j])
        {
            temp[index]=a[i];
            i=i+1;
        }
        else
        {
            temp[index]=a[j];
            j=j+1;
        }
        index=index+1;
    }
    if(i>mid)
    {
        while(j<=end)
        {
            temp[index]=a[j];
            index=index+1;
            j=j+1;
            
        }
    }
    else
    {
        while(i<=mid)
        {
            temp[index]=a[i];
            index=index+1;
            i=i+1;
            
        }
    }
   for(int k=beg; k<index; k++)
    {
        a[k]=temp[k];
    
    }
}
int main()
{
    int n;
    clock_t t;
    t=clock();
    printf("Enter the size of the array:");
    scanf("%d", &n);
    int a[n];
    printf("\nEnter the elements:\n");
    for(int i=0; i<n;i++)
    {
        scanf("%d", &a[i]);
    }
    int beg=0, end=n-1;
    merge_sort(a,beg,end,n);
    printf("\nsorted array:\n");
    for(int i=0; i<n;i++)
    {
        printf("%d\n", a[i]);
    }
    t=clock()-t;
    double time_taken=((double)t)/CLOCKS_PER_SEC;
    printf("\n%f seconds to search the sub string",time_taken);
    return 0;
}
